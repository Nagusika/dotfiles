format = """
[](purple)\
$os\
$username\
[](bg:pink fg:purple)\
$directory\
[](fg:pink bg:yellow)\
$git_branch$git_state$git_status\
[](fg:yellow bg:cyan)\
$c\
$elixir\
$elm\
$golang\
$gradle\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
[](fg:cyan bg:green)\
$docker_context\
[](fg:green bg:blue)\
$fill\
$cmd_duration$status$time\
[ ](fg:blue)
$character
"""

# Disable the blank line at the start of the prompt
# add_newline = false

# Set 'foo' as custom color palette
palette = 'synthwave_night'

# Define custom colors
[palettes.cyber]
# Overwrite existing color
blue = '#060661'
# Define new color
white = '#D1C5C0'
black = '#272932'
red = '#710000'
yellow = '#FDF500'
green = '#1AC5B0'
cyan = '#37EBF3'
indigo = '#9370DB'
pink = '#E455AE'
purple = '#CB1DCD'



# Define custom colors
[palettes.pastel]
# Overwrite existing color
blue = '#33658A'
# Define new color
white = '#D1C5C0'
black = '#272932'
red = '#710000'
yellow = '#FCA17D'
green = '#06969A'
cyan = '#86BBD8'
indigo = '#9370DB'
pink = '#DA627D'
purple = '#9A348E'

[palettes.synthwave_night]
# Overwrite existing color
blue = '#051C2C'
# Define new color
white = '#D1C5C0'
black = '#272932'
red = '#710000'
yellow = '#ED9B33'
green = '#5461C8'
cyan = '#7A93DC'
indigo = '#3F2A56'
pink = '#E0457B'
purple = '#3F2A56'

# Define custom colors
[palettes.synthwave]
# Overwrite existing color
blue = '#3A3A59'
# Define new color
white = '#D1C5C0'
black = '#272932'
red = '#710000'
yellow = '#FCA17D'
green = '#58A7AF'
cyan = '#71DBD4'
indigo = '#9370DB'
pink = '#C724B1'
purple = '#642F6C'

# You can also replace your username with a neat symbol like   or disable this
# and use the os module below
[username]
show_always = true
style_user = "bg:purple"
style_root = "bg:purple"
format = '[$user ]($style)'
disabled = false

[character]
format = "[►](fg:purple)[►](fg:pink) "

# An alternative to the username module which displays a symbol that
# represents the current operating system
[os]
style = "bg:purple"
disabled = true # Disabled by default

[fill]
symbol = " "
style = "bg:blue"

[directory]
style = "bg:pink"
format = "[ $path ]($style)"
truncation_length = 3
truncation_symbol = "…/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = " "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
# Keep in mind that the order matters. For example:
# "Important Documents" = "  "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important  " = "  "

[c]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[docker_context]
symbol = " "
style = "bg:green"
format = '[ $symbol $context ]($style) $path'

[elixir]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[elm]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[golang]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[gradle]
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[haskell]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[java]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[julia]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[nodejs]
symbol = ""
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[nim]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[rust]
symbol = ""
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[scala]
symbol = " "
style = "bg:cyan"
format = '[ $symbol ($version) ]($style)'

[time]
disabled = false
time_format = "%R" # Hour:Minute Format
style = "bg:blue"
format = '[ $time ]($style)'

[cmd_duration]
min_time = 1_000
show_milliseconds = false
style = "bg:blue"
min_time_to_notify = 60_000
show_notifications = false
format = "[⏱$duration]($style)"

[status]
style = 'bg:blue'
symbol = '🔴 '
success_symbol = '🟢'
format = '[$symbol$common_meaning$signal_name$maybe_int]($style)'
map_symbol = true
disabled = false

[git_branch]
symbol = ""
style = "bg:yellow"
format = '[ $symbol $branch ]($style)'

[git_state]
style = "bg:yellow"
format = '[\($state( $progress_current of $progress_total)\)]($style)'
cherry_pick = '[🍒 PICKING]($style)'

[git_status]
conflicted = '🏳'
ahead = '🏎💨'
behind = '😰'
diverged = '😵'
up_to_date = '✓'
untracked = '🤷'
stashed = '📦'
modified = '📝'
renamed = '👅'
deleted = '🗑'
style = "bg:yellow"
staged = '[++\($count\)](style)'
format = '[$all_status$ahead_behind]($style)'                             